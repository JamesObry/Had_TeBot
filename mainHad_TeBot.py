import telebot
import time
import sqlite3 as sq
from telebot import types

with sq.connect("vebinar.db") as con:
    cur = con.cursor()
    cur.execute("""create table if not exists vebinar_users (
        telegram_id integer primary key,
        name text,
        f_que text
    )""")
    cur.execute("""create table if not exists admin (
        telegram_id integer primary key,
        message_text text,
        previous_text text
    )""")

bot = telebot.TeleBot('1689882063:AAHfaQZb196hQ9Hh2VqNMhwYSewGJtnTce0')

# keyboards
main_question = types.InlineKeyboardMarkup(row_width=1)
mainYes = types.InlineKeyboardButton(text='100% —É–≤–µ—Ä–µ–Ω', callback_data='yes')
mainNo = types.InlineKeyboardButton(text='–ü–æ–∫–∞ –Ω–µ —Ä–µ—à–∏–ª', callback_data='no')
main_question.add(mainYes,mainNo)

@bot.message_handler(commands=['start'])
def startMessage(message):
    with sq.connect("vebinar.db") as con:
        cur = con.cursor()
        try:
            user_name = cur.execute(f"select name from vebinar_users where telegram_id = {message.chat.id}")
            user_name = cur.fetchone()[0]
            bot.send_message(message.chat.id, f'–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {user_name}')
            f_q = cur.execute(f'select f_que from vebinar_users where telegram_id = {message.chat.id}')
            f_q = cur.fetchone()[0]
            if f_q == '–Ω–µ—Ç':
                bot.send_message(message.chat.id,'–û—Ç–≤–µ—Ç—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π, –Ω–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Åüëá\n\n–¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥—É–º–∞–µ—à—å —á—Ç–æ —ç—Ç–æ—Ç –≤–µ–±–∏–Ω–∞—Ä –¥–∞–π—Å—Ç –ø–æ–ª—å–∑—É?\n\n–ò–ª–∏ –Ω–µ—Ç?:)',reply_markup=main_question)
            elif f_q == '–¥–∞':
                bot.send_message(message.chat.id,'–ö–∞–∫ —è —É–∂–µ —Å–∫–∞–∑–∞–ª–∞ –Ω–∞—á–∏–Ω–∞–µ–º 1 —è–Ω–≤–∞—Ä—è –≤ 14:60 –º—Å–∫.\n\n–ù–∞ —Å–µ–π —Ä–∞–∑ —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ë–ï–°–ü–õ–ê–¢–ù–´–ô –≤–µ–±–∏–Ω–∞—Ä, –æ –Ω–µ—Ç... –≠—Ç–æ —Ü–µ–ª—ã–π –º–∏–Ω–∏-–∫—É—Ä—Å, –≥–¥–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç–µ —Å—Ä–∞–∑—É –≤–Ω–µ–¥—Ä—è—Ç—å –≤ —Å–≤–æ—é –∂–∏–∑–Ω—åüòé')
                bot.send_message(message.chat.id, '–û–∂–∏–¥–∞–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–æ –≤–µ–±–∏–Ω–∞—Ä, —è –±—É–¥—É —Ç–µ–±—è —Ç–∞–º –∂–¥–∞—Ç—å!')
        except:
            bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤–æ–µ –∏–º—è, —á—Ç–æ–±—ã —è –∑–Ω–∞–ª–∞ –∫–∞–∫ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è')
            bot.register_next_step_handler(message, rename)
def rename(message):
    with sq.connect("vebinar.db") as con:
        cur = con.cursor()
        name = message.text
        cur.execute(f"insert into vebinar_users(name, telegram_id, f_que) values (?, ?, ?)", (message.text, message.chat.id, '–Ω–µ—Ç'))
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {name}')
        bot.send_message(message.chat.id, '–û—Ç–≤–µ—Ç—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π, –Ω–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Åüëá\n\n–¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥—É–º–∞–µ—à—å —á—Ç–æ —ç—Ç–æ—Ç –≤–µ–±–∏–Ω–∞—Ä –¥–∞–π—Å—Ç –ø–æ–ª—å–∑—É?\n\n–ò–ª–∏ –Ω–µ—Ç?:)', reply_markup=main_question)
@bot.callback_query_handler(func=lambda call:True)
def f_queCheck(call):
    if call.data == 'yes':
        with sq.connect("vebinar.db") as con:
            cur = con.cursor()
            cur.execute(f"update vebinar_users set f_que = '–¥–∞' where telegram_id = {call.message.chat.id}")
            bot.send_message(call.message.chat.id, '–û—Ç–ª–∏—á–Ω–æ!üöÄ\n\n–ö–∞–∫ —è —É–∂–µ —Å–∫–∞–∑–∞–ª–∞ –Ω–∞—á–∏–Ω–∞–µ–º 1 —è–Ω–≤–∞—Ä—è –≤ 14:60 –º—Å–∫.\n\n–ù–∞ —Å–µ–π —Ä–∞–∑ —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ë–ï–°–ü–õ–ê–¢–ù–´–ô –≤–µ–±–∏–Ω–∞—Ä, –æ –Ω–µ—Ç... –≠—Ç–æ —Ü–µ–ª—ã–π –º–∏–Ω–∏-–∫—É—Ä—Å, –≥–¥–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç–µ —Å—Ä–∞–∑—É –≤–Ω–µ–¥—Ä—è—Ç—å –≤ —Å–≤–æ—é –∂–∏–∑–Ω—åüòé')
    elif call.data == 'no':
        with sq.connect("vebinar.db") as con:
            cur = con.cursor()
            cur.execute(f"update vebinar_users set f_que = '–Ω–µ—Ç' where telegram_id = {call.message.chat.id}")
            bot.send_message(call.message.chat.id, '–ï—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Å–ø–æ—Å–æ–± —É–∑–Ω–∞—Ç—å)\n\n–ü–æ–¥—É–º–∞—Ç—å –∏ —Ä–µ—à–∏—Ç—å —Ç–æ—á–Ω–æ ')

def sendMessage(message):
    time.sleep(10)
    with sq.connect("vebinar.db") as con:
        cur = con.cursor()
        cur.execute("select message_text from admin where telegram_id = 'myid'")
# TO DO
# ADMIN BOT
# ADMIN DB
# WITH BOOL ADN DB
bot.infinity_polling(True)